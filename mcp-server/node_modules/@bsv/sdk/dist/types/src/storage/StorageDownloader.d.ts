export interface DownloaderConfig {
    networkPreset: 'mainnet' | 'testnet' | 'local';
}
export interface DownloadResult {
    data: number[];
    mimeType: string | null;
}
/**
 * Locates HTTP URLs where content can be downloaded. It uses the passed or the default one.
 *
 * @param {Object} obj All parameters are passed in an object.
 * @param {String} obj.uhrpUrl The UHRP url to resolve.
 * @param {string} obj.confederacyHost HTTPS URL for for the with default setting.
 *
 * @return {Array<String>} An array of HTTP URLs where content can be downloaded.
 * @throws {Error} If UHRP url parameter invalid or is not an array
 * or there is an error retrieving url(s) stored in the UHRP token.
 */
export declare class StorageDownloader {
    private readonly networkPreset?;
    constructor(config?: DownloaderConfig);
    resolve(uhrpUrl: string): Promise<string[]>;
    download(uhrpUrl: string): Promise<DownloadResult>;
}
//# sourceMappingURL=StorageDownloader.d.ts.map